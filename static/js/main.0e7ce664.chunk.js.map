{"version":3,"sources":["components/Button/Button.jsx","components/Slider/InputSlider.jsx","components/Square/Square.jsx","components/SliderScreen/RangeSlider.jsx","components/MainScreen/MainScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","value","onClick","className","type","InputSlider","onChange","min","max","step","Square","style","React","memo","RangeSlider","useState","rangevalred","setRangevalred","rangevalgreen","setRangevalgreen","rangevalblue","setRangevalblue","showSlider","setShowSlider","allColor","setColor","e","target","length","col","preventDefault","fieldStyle","red","green","blue","width","height","backgroundColor","border","borderRadius","boxShadow","MainScreen","history","useHistory","data-text","push","pathname","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UASeA,G,MANA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACpB,OACI,uBAAOD,MAAOA,EAAOE,UAAU,MAAMD,QAASA,EAASE,KAAK,aCKrDC,G,MAPK,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,SAAWL,EAA4B,EAA5BA,MAAQM,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KAC/C,OACI,uBAAOL,KAAK,QAAQD,UAAU,SAAUF,MAAOA,EAAOM,IAAKA,EAAKC,IAAKA,EAAKC,KAAMA,EAAMH,SAAUA,MCHlGI,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACI,qBAAKA,MAASA,KAIPC,MAAMC,KAAKH,GCDpBI,G,MAAc,WAChB,IADqB,EAEiBC,mBADjB,KADA,mBAEdC,EAFc,KAEDC,EAFC,OAGqBF,mBAFrB,KADA,mBAGdG,EAHc,KAGCC,EAHD,OAImBJ,mBAHnB,KADA,mBAIdK,EAJc,KAIAC,EAJA,OAKeN,oBAAS,GALxB,mBAKdO,EALc,KAKFC,EALE,OAMQR,mBAAS,IANjB,mBAMdS,EANc,KAMJC,EANI,KAyCrB,OACE,sBAAKtB,UAAU,sBAAf,UACE,sBAAKA,UAAU,kBAAf,UACGmB,EAAa,yCAAG,cAAC,EAAD,CAAahB,SA3BlB,SAACoB,GACfT,EAAeS,EAAEC,OAAO1B,QA0B8BA,MAAOe,EAAaT,IAAK,EAAGC,IAAK,IAAKC,KAAM,IAC1F,uCAAUO,KAEV,cAAC,EAAD,CAAaV,SA1BL,SAACoB,GACjBP,EAAiBO,EAAEC,OAAO1B,QAyBkBA,MAAOiB,EAAeX,IAAK,EAAGC,IAAK,IAAKC,KAAM,IAClF,yCAAYS,KAEZ,cAAC,EAAD,CAAaZ,SAzBN,SAACoB,GAChBL,EAAgBK,EAAEC,OAAO1B,QAwBkBA,MAAOmB,EAAcb,IAAK,EAAGC,IAAK,IAAKC,KAAM,IAChF,wCAAWW,QAAwB,KAEvC,cAAC,EAAD,CAAQlB,QAxBhB,WACI,GAAwB,IAApBsB,EAASI,QAAoC,IAApBJ,EAASI,OAClCL,GAAc,OACX,CACH,IAAMM,EAAML,EAASA,EAASI,OAAO,GACzCX,EAAeY,EAAIb,aACnBG,EAAiBU,EAAIX,eACrBG,EAAgBQ,EAAIT,cACpBG,GAAc,KAgBmBtB,MAAO,WACpC,cAAC,EAAD,CAAQC,QA1CE,SAACwB,GACfA,EAAEI,iBACFL,EAAS,GAAD,mBAAKD,GAAL,CAAe,CAACR,cAAYE,gBAAeE,oBAwCnBnB,MAAO,WACnC,cAAC,EAAD,CAAQC,QA/CI,WAChBqB,GAAeD,IA8CmBrB,MAAO,YAEzC,sBAAKE,UAAU,mBAAf,UACI,qDAAwBa,EAAxB,KAAuCE,EAAvC,KAAwDE,EAAxD,QACA,cAAC,EAAD,CAAQT,MAAOoB,EAAWf,EAAaE,EAAeE,aAMnDR,MAAMC,KAAKC,GAEpBiB,EAAa,SAACC,EAAKC,EAAOC,GAAb,MAAuB,CACtCC,MAAO,OACPC,OAAS,OACTC,gBAAgB,QAAD,OAAUL,EAAV,aAAkBC,EAAlB,aAA4BC,EAA5B,MACfI,OAAQ,kCACRC,aAAc,OACdC,UAAW,+HCzDAC,G,MAlBI,WACf,IAAIC,EAAUC,cAQd,OACI,sBAAKxC,UAAU,WAAf,UACE,oBAAIyC,YAAU,eAAd,0BACA,mBAAGzC,UAAU,YAAb,kZACA,cAAC,EAAD,CAASF,MAAO,aAAcC,QAVf,SAACwB,GAClBA,EAAEI,iBACFY,EAAQG,KAAK,CACXC,SAAU,mBCeLC,MAnBf,WACE,OACE,mCACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,qBAAK9C,UAAU,MAAf,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAO8C,KAAK,SAAZ,SACE,qBAAK9C,UAAU,MAAf,SACE,cAAC,EAAD,cCNK+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,IAAD,UACD,cAAC,EAAD,QAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0e7ce664.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.css'\r\n\r\nconst Button = ({value, onClick}) => {\r\n    return (\r\n        <input value={value} className=\"btn\" onClick={onClick} type=\"button\"></input>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Slider.css'\r\n\r\nconst InputSlider = ({onChange,  value , min, max, step}) => {\r\n    return (\r\n        <input type=\"range\" className=\"slider\"  value={value} min={min} max={max} step={step} onChange={onChange}/>\r\n    )\r\n    \r\n}\r\n\r\nexport default InputSlider;","import React from 'react';\r\n\r\nconst Square = ({style}) => {\r\n    return (\r\n        <div style = {style}></div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Square);","import React, {useState} from 'react';\r\nimport Button from '../Button/Button';\r\nimport InputSlider from '../Slider/InputSlider';\r\nimport Square from '../Square/Square';\r\nimport './range.css'\r\n\r\n\r\nconst RangeSlider = () =>{\r\n    const initialState = 255;\r\n    const [rangevalred, setRangevalred] = useState(initialState);\r\n    const [rangevalgreen, setRangevalgreen] = useState(initialState);\r\n    const [rangevalblue, setRangevalblue] = useState(initialState);\r\n    const [showSlider, setShowSlider] = useState(true)\r\n    const [allColor, setColor] = useState([])\r\n\r\n    const showSliders = () => {\r\n        setShowSlider(!showSlider)\r\n    }\r\n\r\n    const submitRGB = (e) => {\r\n        e.preventDefault();\r\n        setColor([...allColor, {rangevalred,rangevalgreen, rangevalblue}])\r\n    }\r\n\r\n    const changeRed = (e) => {\r\n        setRangevalred(e.target.value)\r\n    }\r\n\r\n    const changeGreen = (e) => {\r\n        setRangevalgreen(e.target.value)\r\n    }\r\n\r\n    const changeBlue = (e) => {\r\n        setRangevalblue(e.target.value)\r\n    }\r\n    \r\n    function clearState  ()  {\r\n        if (allColor.length === 1 || allColor.length === 0) {\r\n            setShowSlider(false)\r\n        } else {\r\n            const col = allColor[allColor.length-2];\r\n        setRangevalred(col.rangevalred);\r\n        setRangevalgreen(col.rangevalgreen);\r\n        setRangevalblue(col.rangevalblue);\r\n        setShowSlider(false)\r\n        }\r\n      };\r\n    \r\n    return (\r\n      <div className=\"range-cont App-cont\">\r\n        <div className=\"range-left-cont\">\r\n          {showSlider ? <> <InputSlider onChange={changeRed}  value={rangevalred} min={0} max={255} step={1}/>\r\n                <h3>Red: {rangevalred}</h3>\r\n\r\n                <InputSlider onChange={changeGreen} value={rangevalgreen} min={0} max={255} step={1}/>\r\n                <h3>Green: {rangevalgreen}</h3>\r\n\r\n                <InputSlider onChange={changeBlue} value={rangevalblue} min={0} max={255} step={1}/>\r\n                <h3>Blue: {rangevalblue}</h3></> : null}\r\n           \r\n            <Button onClick={clearState} value={'Cancel'}/>\r\n            <Button onClick={submitRGB} value={'Submit'}/>\r\n            <Button onClick={showSliders} value={'show'}/>\r\n        </div>\r\n        <div className=\"range-right-cont\">\r\n            <h2>Your RGB color is ({rangevalred}, {rangevalgreen}, {rangevalblue}) </h2>\r\n            <Square style={fieldStyle(rangevalred, rangevalgreen, rangevalblue)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(RangeSlider);\r\n\r\nconst fieldStyle = (red, green, blue) => ({    \r\n    width: '10em',\r\n    height:  '10em',\r\n    backgroundColor: `rgba(${red}, ${green}, ${blue} )`,\r\n    border: '1px solid rgba(23, 40, 53, 0.4)',\r\n    borderRadius: '20px',\r\n    boxShadow: 'inset 1px 1px 1px rgba(23, 40, 53, 0.4), 0px 6px 3px 0px rgba(23, 40, 53, 0.4), 12px 12px 14px -10px rgba(23, 40, 53, 0.4)'\r\n});\r\n\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '../Button/Button';\r\nimport './mainscreen.css'\r\n\r\nconst MainScreen = () => {\r\n    let history = useHistory();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        history.push({\r\n          pathname: \"/color\",\r\n        });\r\n    }\r\n    return(\r\n        <div className=\"App-cont\">\r\n          <h1 data-text=\"Color Picker\">Color Picker</h1>\r\n          <p className=\"Main-text\"> Finding that perfect color is easier than you think. Use our color picker to discover beautiful colors and harmonies with RGB values. Use the color picker by clicking and dragging your cursor inside the picker area to highlight a color. Click the swatch to add it to your palette. After selecting a color, experiment with different harmonies by using the dropdown below the color picker.</p>\r\n          <Button  value={'try it now'} onClick={handleSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScreen;","import { Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport RangeSlider from './components/SliderScreen/RangeSlider';\nimport MainScreen from './components/MainScreen/MainScreen'\n\n\n\nfunction App() {\n  return (\n    <>\n    <Switch >\n      <Route exact path=\"/\">\n        <div className=\"App\">\n          <MainScreen />\n        </div>\n      </Route>\n      <Route path=\"/color\">\n        <div className=\"App\">\n          <RangeSlider/>\n        </div>\n      </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Router >\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}